name: colvertcv

services:
  sms_cv:
    image: sms_cv:latest
    container_name: sms_cv
    restart: unless-stopped
    networks:
      - default
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.sms_cv.rule=Host(`${SMS_DOMAIN}`)"
      - "traefik.http.routers.sms_cv.entrypoints=${ENTRYPOINT}"
      - "traefik.http.routers.sms_cv.tls.certresolver=${CERT_RESOLVER}"
      - "traefik.http.services.sms_cv.loadbalancer.server.port=80"

  agencies:
    image: agencies:latest
    container_name: agencies
    restart: unless-stopped
    networks:
      - default
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.agencies.rule=Host(`${AGENCIES_DOMAIN}`)"
      - "traefik.http.routers.agencies.entrypoints=${ENTRYPOINT}"
      - "traefik.http.routers.agencies.tls.certresolver=${CERT_RESOLVER}"
      - "traefik.http.services.agencies.loadbalancer.server.port=80"

  frontend_cv:
    image: frontend_cv:latest
    container_name: frontend_cv
    restart: unless-stopped
    networks:
      - default
    depends_on:
      - api_cv
      - generate_cv
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend_cv.rule=Host(`${FRONTEND_DOMAIN}`)"
      - "traefik.http.routers.frontend_cv.entrypoints=${ENTRYPOINT}"
      - "traefik.http.routers.frontend_cv.tls.certresolver=${CERT_RESOLVER}"
      - "traefik.http.services.frontend_cv.loadbalancer.server.port=80"

  api_cv:
    image: api_cv:latest
    container_name: api_cv
    restart: unless-stopped
    environment:
      - NODE_ENV=${NODE_ENV}
      - PORT=${PORT}
      - SUPABASE_URL=https://${SUPABASE_DOMAIN}
      - SUPABASE_KEY=${SUPABASE_KEY}
    networks:
      - default
    depends_on:
      - supabase
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api_cv.rule=Host(`${API_DOMAIN}`)"
      - "traefik.http.routers.api_cv.entrypoints=${ENTRYPOINT}"
      - "traefik.http.routers.api_cv.tls.certresolver=${CERT_RESOLVER}"
      - "traefik.http.services.api_cv.loadbalancer.server.port=${PORT}"

  generate_cv:
    image: generate_cv:latest
    container_name: generate_cv
    restart: unless-stopped
    environment:
      - API_URL=${API_URL}
    networks:
      - default
    depends_on:
      - api_cv
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.generate_cv.rule=Host(`${GENERATE_CV_DOMAIN}`)"
      - "traefik.http.routers.generate_cv.entrypoints=${ENTRYPOINT}"
      - "traefik.http.routers.generate_cv.tls.certresolver=${CERT_RESOLVER}"
      - "traefik.http.services.generate_cv.loadbalancer.server.port=80"

  supabase:
    image: supabase/supabase-postgres:latest
    container_name: supabase
    restart: unless-stopped
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
      - ANON_KEY=${ANON_KEY}
      - SERVICE_ROLE_KEY=${SERVICE_ROLE_KEY}
    volumes:
      - supabase-data:/var/lib/postgresql/data
    networks:
      - default
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.supabase.rule=Host(`${SUPABASE_DOMAIN}`)"
      - "traefik.http.routers.supabase.entrypoints=${ENTRYPOINT}"
      - "traefik.http.routers.supabase.tls.certresolver=${CERT_RESOLVER}"
      - "traefik.http.services.supabase.loadbalancer.server.port=8000"

  soketi:
    image: quay.io/soketi/soketi:latest
    container_name: soketi
    restart: unless-stopped
    environment:
      - SOKETI_DEFAULT_APP_ID=${SOKETI_APP_ID}
      - SOKETI_DEFAULT_APP_KEY=${SOKETI_APP_KEY}
      - SOKETI_DEFAULT_APP_SECRET=${SOKETI_APP_SECRET}
      - SOKETI_DEFAULT_HOST=0.0.0.0
      - SOKETI_DEFAULT_PORT=6001
    networks:
      - default
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.soketi.rule=Host(`${SOKETI_DOMAIN}`)"
      - "traefik.http.routers.soketi.entrypoints=${ENTRYPOINT}"
      - "traefik.http.routers.soketi.tls.certresolver=${CERT_RESOLVER}"
      - "traefik.http.services.soketi.loadbalancer.server.port=6001"

networks:
  default:
    name: ${NETWORK_NAME}

volumes:
  supabase-data: