---
- name: Setup Server
  hosts: servers
  become: true
  tasks:
    - name: Check if Docker is installed
      command: which docker
      register: docker_check
      ignore_errors: true

    - name: Install required system packages
      apt:
        pkg:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
          - python3-pip
          - virtualenv
          - python3-setuptools
          - python3-docker
        state: present
        update_cache: true
      when: docker_check.rc != 0

    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
      when: docker_check.rc != 0

    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable
        state: present
      when: docker_check.rc != 0

    - name: Update apt and install docker-ce
      apt:
        name: 
          - docker-ce
          - docker-ce-cli
          - containerd.io
        state: present
        update_cache: true
      when: docker_check.rc != 0

    - name: Install Docker Module for Python (using apt instead of pip)
      apt:
        name: python3-docker
        state: present
      when: docker_check.rc != 0

    - name: Start Docker service
      service:
        name: docker
        state: started
        enabled: true
      when: docker_check.rc != 0
      
    - name: Check if containers directory exists
      stat:
        path: /opt/containers
      register: containers_dir

    - name: Create containers directory
      file:
        path: /opt/containers
        state: directory
        mode: '0755'
      when: not containers_dir.stat.exists

    - name: Copy containers directory contents
      copy:
        src: containers/
        dest: /opt/containers/
        mode: '0755'
        recursive: true